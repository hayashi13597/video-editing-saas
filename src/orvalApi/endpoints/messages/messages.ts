/**
 * Generated by orval v7.10.0 üç∫
 * Do not edit manually.
 * backend
 * OpenAPI spec version: 1.0.0
 */
import type {
  CreateMessageDto,
  GetMessagesForProject200,
  GetMessagesForProjectParams,
  MessageDto
} from "../../model";

import { customInstance } from "../../../lib/custom-instance";

type SecondParameter<T extends (...args: never) => unknown> = Parameters<T>[1];

export const getMessages = () => {
  const createMessage = (
    createMessageDto: CreateMessageDto,
    options?: SecondParameter<typeof customInstance>
  ) => {
    return customInstance<MessageDto>(
      {
        url: `/messages`,
        method: "POST",
        headers: { "Content-Type": "application/json" },
        data: createMessageDto
      },
      options
    );
  };
  const getMessagesForProject = (
    projectId: string,
    params?: GetMessagesForProjectParams,
    options?: SecondParameter<typeof customInstance>
  ) => {
    return customInstance<GetMessagesForProject200>(
      { url: `/messages/project/${projectId}`, method: "GET", params },
      options
    );
  };
  return { createMessage, getMessagesForProject };
};
export type CreateMessageResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getMessages>["createMessage"]>>
>;
export type GetMessagesForProjectResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getMessages>["getMessagesForProject"]>>
>;
