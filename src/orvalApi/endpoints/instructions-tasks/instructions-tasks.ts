/**
 * Generated by orval v7.10.0 üç∫
 * Do not edit manually.
 * backend
 * OpenAPI spec version: 1.0.0
 */
import type {
  ProcessInstructionAndCreateTasks200,
  ProcessInstructionAndCreateTasksBody
} from "../../model";

import { customInstance } from "../../../lib/custom-instance";

type SecondParameter<T extends (...args: never) => unknown> = Parameters<T>[1];

export const getInstructionsTasks = () => {
  const processInstructionAndCreateTasks = (
    projectId: string,
    processInstructionAndCreateTasksBody?: ProcessInstructionAndCreateTasksBody,
    options?: SecondParameter<typeof customInstance>
  ) => {
    const formData = new FormData();
    if (processInstructionAndCreateTasksBody?.textInstruction !== undefined) {
      formData.append(
        `textInstruction`,
        processInstructionAndCreateTasksBody.textInstruction
      );
    }
    if (processInstructionAndCreateTasksBody?.voiceInstruction !== undefined) {
      formData.append(
        `voiceInstruction`,
        processInstructionAndCreateTasksBody.voiceInstruction
      );
    }

    return customInstance<ProcessInstructionAndCreateTasks200>(
      {
        url: `/projects/${projectId}/instructions/tasks`,
        method: "POST",
        headers: { "Content-Type": "multipart/form-data" },
        data: formData
      },
      options
    );
  };
  return { processInstructionAndCreateTasks };
};
export type ProcessInstructionAndCreateTasksResult = NonNullable<
  Awaited<
    ReturnType<
      ReturnType<
        typeof getInstructionsTasks
      >["processInstructionAndCreateTasks"]
    >
  >
>;
