/**
 * Generated by orval v7.10.0 üç∫
 * Do not edit manually.
 * backend
 * OpenAPI spec version: 1.0.0
 */
import type {
  CreateCustomScheduler200,
  CreateCustomSchedulerBody,
  GetSchedulerStatus200,
  StopScheduledJob200,
  StopScheduledJobBody,
  TestAllNotifications200,
  TestDeadlineWarnings200,
  TestOverdueNotifications200,
  TriggerAllNotifications200,
  TriggerAllScheduledJobs200,
  TriggerDeadlineWarnings200,
  TriggerDeadlineWarningsBody,
  TriggerDeadlineWarningsParams,
  TriggerMultipleDeadlineWarnings200,
  TriggerOverdueNotifications200
} from "../../model";

import { customInstance } from "../../../lib/custom-instance";

type SecondParameter<T extends (...args: never) => unknown> = Parameters<T>[1];

export const getDeadlineWarnings = () => {
  /**
   * Get status of all scheduled deadline warning jobs
   */
  const getSchedulerStatus = (
    options?: SecondParameter<typeof customInstance>
  ) => {
    return customInstance<GetSchedulerStatus200>(
      { url: `/deadline-warnings/scheduler/status`, method: "GET" },
      options
    );
  };
  /**
   * Manually trigger all scheduled deadline warning jobs
   */
  const triggerAllScheduledJobs = (
    options?: SecondParameter<typeof customInstance>
  ) => {
    return customInstance<TriggerAllScheduledJobs200>(
      { url: `/deadline-warnings/scheduler/trigger-all`, method: "POST" },
      options
    );
  };
  /**
   * Create a custom scheduled deadline warning job
   */
  const createCustomScheduler = (
    createCustomSchedulerBody: CreateCustomSchedulerBody,
    options?: SecondParameter<typeof customInstance>
  ) => {
    return customInstance<CreateCustomScheduler200>(
      {
        url: `/deadline-warnings/scheduler/custom`,
        method: "POST",
        headers: { "Content-Type": "application/json" },
        data: createCustomSchedulerBody
      },
      options
    );
  };
  /**
   * Stop a specific scheduled job
   */
  const stopScheduledJob = (
    stopScheduledJobBody: StopScheduledJobBody,
    options?: SecondParameter<typeof customInstance>
  ) => {
    return customInstance<StopScheduledJob200>(
      {
        url: `/deadline-warnings/scheduler/stop`,
        method: "POST",
        headers: { "Content-Type": "application/json" },
        data: stopScheduledJobBody
      },
      options
    );
  };
  /**
 * Manually trigger deadline warning notifications
Admin only - triggers deadline warnings for projects approaching due date
 */
  const triggerDeadlineWarnings = (
    triggerDeadlineWarningsBody?: TriggerDeadlineWarningsBody,
    params?: TriggerDeadlineWarningsParams,
    options?: SecondParameter<typeof customInstance>
  ) => {
    return customInstance<TriggerDeadlineWarnings200>(
      {
        url: `/deadline-warnings/trigger`,
        method: "POST",
        headers: { "Content-Type": "application/json" },
        data: triggerDeadlineWarningsBody,
        params
      },
      options
    );
  };
  /**
 * Trigger multiple deadline warnings (7, 3, 1 days)
Admin only - triggers all deadline warning intervals
 */
  const triggerMultipleDeadlineWarnings = (
    options?: SecondParameter<typeof customInstance>
  ) => {
    return customInstance<TriggerMultipleDeadlineWarnings200>(
      { url: `/deadline-warnings/trigger-multiple`, method: "POST" },
      options
    );
  };
  /**
 * Test deadline warning notifications (no auth required for testing)
Use this endpoint to test deadline warning functionality
 */
  const testDeadlineWarnings = (
    options?: SecondParameter<typeof customInstance>
  ) => {
    return customInstance<TestDeadlineWarnings200>(
      { url: `/deadline-warnings/test`, method: "POST" },
      options
    );
  };
  /**
 * Manually trigger overdue project notifications
Admin only - triggers notifications for projects that are past due date
 */
  const triggerOverdueNotifications = (
    options?: SecondParameter<typeof customInstance>
  ) => {
    return customInstance<TriggerOverdueNotifications200>(
      { url: `/deadline-warnings/trigger-overdue`, method: "POST" },
      options
    );
  };
  /**
 * Trigger all notifications (deadline warnings + overdue)
Admin only - triggers both deadline warnings and overdue notifications
 */
  const triggerAllNotifications = (
    options?: SecondParameter<typeof customInstance>
  ) => {
    return customInstance<TriggerAllNotifications200>(
      { url: `/deadline-warnings/trigger-all-notifications`, method: "POST" },
      options
    );
  };
  /**
 * Test overdue project notifications (no auth required for testing)
Use this endpoint to test overdue project functionality
 */
  const testOverdueNotifications = (
    options?: SecondParameter<typeof customInstance>
  ) => {
    return customInstance<TestOverdueNotifications200>(
      { url: `/deadline-warnings/test-overdue`, method: "POST" },
      options
    );
  };
  /**
 * Test all notifications (deadline warnings + overdue) - no auth required for testing
Use this endpoint to test both deadline warning and overdue functionality
 */
  const testAllNotifications = (
    options?: SecondParameter<typeof customInstance>
  ) => {
    return customInstance<TestAllNotifications200>(
      { url: `/deadline-warnings/test-all`, method: "POST" },
      options
    );
  };
  return {
    getSchedulerStatus,
    triggerAllScheduledJobs,
    createCustomScheduler,
    stopScheduledJob,
    triggerDeadlineWarnings,
    triggerMultipleDeadlineWarnings,
    testDeadlineWarnings,
    triggerOverdueNotifications,
    triggerAllNotifications,
    testOverdueNotifications,
    testAllNotifications
  };
};
export type GetSchedulerStatusResult = NonNullable<
  Awaited<
    ReturnType<ReturnType<typeof getDeadlineWarnings>["getSchedulerStatus"]>
  >
>;
export type TriggerAllScheduledJobsResult = NonNullable<
  Awaited<
    ReturnType<
      ReturnType<typeof getDeadlineWarnings>["triggerAllScheduledJobs"]
    >
  >
>;
export type CreateCustomSchedulerResult = NonNullable<
  Awaited<
    ReturnType<ReturnType<typeof getDeadlineWarnings>["createCustomScheduler"]>
  >
>;
export type StopScheduledJobResult = NonNullable<
  Awaited<
    ReturnType<ReturnType<typeof getDeadlineWarnings>["stopScheduledJob"]>
  >
>;
export type TriggerDeadlineWarningsResult = NonNullable<
  Awaited<
    ReturnType<
      ReturnType<typeof getDeadlineWarnings>["triggerDeadlineWarnings"]
    >
  >
>;
export type TriggerMultipleDeadlineWarningsResult = NonNullable<
  Awaited<
    ReturnType<
      ReturnType<typeof getDeadlineWarnings>["triggerMultipleDeadlineWarnings"]
    >
  >
>;
export type TestDeadlineWarningsResult = NonNullable<
  Awaited<
    ReturnType<ReturnType<typeof getDeadlineWarnings>["testDeadlineWarnings"]>
  >
>;
export type TriggerOverdueNotificationsResult = NonNullable<
  Awaited<
    ReturnType<
      ReturnType<typeof getDeadlineWarnings>["triggerOverdueNotifications"]
    >
  >
>;
export type TriggerAllNotificationsResult = NonNullable<
  Awaited<
    ReturnType<
      ReturnType<typeof getDeadlineWarnings>["triggerAllNotifications"]
    >
  >
>;
export type TestOverdueNotificationsResult = NonNullable<
  Awaited<
    ReturnType<
      ReturnType<typeof getDeadlineWarnings>["testOverdueNotifications"]
    >
  >
>;
export type TestAllNotificationsResult = NonNullable<
  Awaited<
    ReturnType<ReturnType<typeof getDeadlineWarnings>["testAllNotifications"]>
  >
>;
