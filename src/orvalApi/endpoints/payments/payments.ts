/**
 * Generated by orval v7.10.0 üç∫
 * Do not edit manually.
 * backend
 * OpenAPI spec version: 1.0.0
 */
import type {
  CreatePaymentDto,
  DefaultSelectionPrisma36PaymentPayload,
  GetPayment200,
  ListPayments200,
  ListPaymentsParams,
  UpdatePaymentStatusDto
} from "../../model";

import { customInstance } from "../../../lib/custom-instance";

type SecondParameter<T extends (...args: never) => unknown> = Parameters<T>[1];

export const getPayments = () => {
  const createPaymentRecord = (
    createPaymentDto: CreatePaymentDto,
    options?: SecondParameter<typeof customInstance>
  ) => {
    return customInstance<DefaultSelectionPrisma36PaymentPayload>(
      {
        url: `/payments`,
        method: "POST",
        headers: { "Content-Type": "application/json" },
        data: createPaymentDto
      },
      options
    );
  };
  const listPayments = (
    params?: ListPaymentsParams,
    options?: SecondParameter<typeof customInstance>
  ) => {
    return customInstance<ListPayments200>(
      { url: `/payments`, method: "GET", params },
      options
    );
  };
  const getPayment = (
    paymentId: string,
    options?: SecondParameter<typeof customInstance>
  ) => {
    return customInstance<GetPayment200>(
      { url: `/payments/${paymentId}`, method: "GET" },
      options
    );
  };
  const updatePaymentStatus = (
    paymentId: string,
    updatePaymentStatusDto: UpdatePaymentStatusDto,
    options?: SecondParameter<typeof customInstance>
  ) => {
    return customInstance<DefaultSelectionPrisma36PaymentPayload>(
      {
        url: `/payments/${paymentId}/status`,
        method: "PUT",
        headers: { "Content-Type": "application/json" },
        data: updatePaymentStatusDto
      },
      options
    );
  };
  return { createPaymentRecord, listPayments, getPayment, updatePaymentStatus };
};
export type CreatePaymentRecordResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getPayments>["createPaymentRecord"]>>
>;
export type ListPaymentsResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getPayments>["listPayments"]>>
>;
export type GetPaymentResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getPayments>["getPayment"]>>
>;
export type UpdatePaymentStatusResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getPayments>["updatePaymentStatus"]>>
>;
