/**
 * Generated by orval v7.10.0 üç∫
 * Do not edit manually.
 * backend
 * OpenAPI spec version: 1.0.0
 */
import type {
  FilterFeedbackDto,
  FilterFeedbackResponseDto,
  TranslateRequirementDto,
  TranslateRequirementResponseDto
} from "../../model";

import { customInstance } from "../../../lib/custom-instance";

type SecondParameter<T extends (...args: never) => unknown> = Parameters<T>[1];

export const getAiAgent = () => {
  /**
   * Translate and specify project requirements.
   * @summary Translate project requirements
   */
  const translateRequirement = (
    translateRequirementDto: TranslateRequirementDto,
    options?: SecondParameter<typeof customInstance>
  ) => {
    return customInstance<TranslateRequirementResponseDto>(
      {
        url: `/ai/translate-requirement`,
        method: "POST",
        headers: { "Content-Type": "application/json" },
        data: translateRequirementDto
      },
      options
    );
  };
  /**
   * Filter customer feedback to make it more constructive.
   * @summary Filter feedback
   */
  const filterFeedback = (
    filterFeedbackDto: FilterFeedbackDto,
    options?: SecondParameter<typeof customInstance>
  ) => {
    return customInstance<FilterFeedbackResponseDto>(
      {
        url: `/ai/filter-feedback`,
        method: "POST",
        headers: { "Content-Type": "application/json" },
        data: filterFeedbackDto
      },
      options
    );
  };
  return { translateRequirement, filterFeedback };
};
export type TranslateRequirementResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getAiAgent>["translateRequirement"]>>
>;
export type FilterFeedbackResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getAiAgent>["filterFeedback"]>>
>;
