/**
 * Generated by orval v7.10.0 üç∫
 * Do not edit manually.
 * backend
 * OpenAPI spec version: 1.0.0
 */
import type {
  CreateReviewDto,
  GetAverageRating200,
  GetReviewsForUser200,
  GetReviewsForUserParams,
  ReviewDto
} from "../../model";

import { customInstance } from "../../../lib/custom-instance";

type SecondParameter<T extends (...args: never) => unknown> = Parameters<T>[1];

export const getReviews = () => {
  /**
   * Create a new review for a completed project.
   */
  const createReview = (
    createReviewDto: CreateReviewDto,
    options?: SecondParameter<typeof customInstance>
  ) => {
    return customInstance<ReviewDto>(
      {
        url: `/reviews`,
        method: "POST",
        headers: { "Content-Type": "application/json" },
        data: createReviewDto
      },
      options
    );
  };
  /**
   * Get all reviews received by a specific user.
   */
  const getReviewsForUser = (
    userId: string,
    params?: GetReviewsForUserParams,
    options?: SecondParameter<typeof customInstance>
  ) => {
    return customInstance<GetReviewsForUser200>(
      { url: `/reviews/user/${userId}`, method: "GET", params },
      options
    );
  };
  /**
   * Get average rating for a specific user.
   */
  const getAverageRating = (
    userId: string,
    options?: SecondParameter<typeof customInstance>
  ) => {
    return customInstance<GetAverageRating200>(
      { url: `/reviews/user/${userId}/average-rating`, method: "GET" },
      options
    );
  };
  return { createReview, getReviewsForUser, getAverageRating };
};
export type CreateReviewResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getReviews>["createReview"]>>
>;
export type GetReviewsForUserResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getReviews>["getReviewsForUser"]>>
>;
export type GetAverageRatingResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getReviews>["getAverageRating"]>>
>;
